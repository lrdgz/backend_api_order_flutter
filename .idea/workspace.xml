<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ChangeListManager">
    <list default="true" id="64b27b70-faa8-4f57-8dbe-83ae25a92718" name="Default Changelist" comment="">
      <change beforePath="$PROJECT_DIR$/test/auth/data/repository/AuthRepository.spec.ts" beforeDir="false" afterPath="$PROJECT_DIR$/test/auth/data/repository/AuthRepository.spec.ts" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="ProjectId" id="1pFTXsZHHSc2ELdfAtS9AFVVBTp" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">
    <property name="RunOnceActivity.OpenProjectViewOnStart" value="true" />
    <property name="RunOnceActivity.ShowReadmeOnStart" value="true" />
    <property name="WebServerToolWindowFactoryState" value="false" />
    <property name="last_opened_file_path" value="$PROJECT_DIR$" />
    <property name="nodejs.mocha.mocha_node_package_dir" value="$PROJECT_DIR$/node_modules/mocha" />
    <property name="nodejs_package_manager_path" value="npm" />
    <property name="ts.external.directory.path" value="C:\Apps\node\food_ordering_backend\node_modules\typescript\lib" />
    <property name="vue.rearranger.settings.migration" value="true" />
  </component>
  <component name="RunManager" selected="Mocha.AuthRepository.should return user id when added to db">
    <configuration name="AuthRepository.should return user id when added to db" type="mocha-javascript-test-runner" temporary="true" nameIsGenerated="true">
      <node-interpreter>project</node-interpreter>
      <node-options />
      <mocha-package>$PROJECT_DIR$/node_modules/mocha</mocha-package>
      <working-directory>$PROJECT_DIR$</working-directory>
      <pass-parent-env>true</pass-parent-env>
      <ui>bdd</ui>
      <extra-mocha-options>--require ts-node/register</extra-mocha-options>
      <test-kind>TEST</test-kind>
      <test-file>$PROJECT_DIR$/test/auth/data/repository/AuthRepository.spec.ts</test-file>
      <test-names>
        <name value="AuthRepository" />
        <name value="should return user id when added to db" />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="AuthRouter" type="mocha-javascript-test-runner" temporary="true" nameIsGenerated="true">
      <node-interpreter>project</node-interpreter>
      <node-options />
      <mocha-package>$PROJECT_DIR$/node_modules/mocha</mocha-package>
      <working-directory>$PROJECT_DIR$</working-directory>
      <pass-parent-env>true</pass-parent-env>
      <ui>bdd</ui>
      <extra-mocha-options>--require ts-node/register</extra-mocha-options>
      <test-kind>SUITE</test-kind>
      <test-file>$PROJECT_DIR$/test/entrypoing/AuthRouter.spec.ts</test-file>
      <test-names>
        <name value="AuthRouter" />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="AuthRouter.should create user and return token" type="mocha-javascript-test-runner" temporary="true" nameIsGenerated="true">
      <node-interpreter>project</node-interpreter>
      <node-options />
      <mocha-package>$PROJECT_DIR$/node_modules/mocha</mocha-package>
      <working-directory>$PROJECT_DIR$</working-directory>
      <pass-parent-env>true</pass-parent-env>
      <ui>bdd</ui>
      <extra-mocha-options>--require ts-node/register</extra-mocha-options>
      <test-kind>TEST</test-kind>
      <test-file>$PROJECT_DIR$/test/entrypoing/AuthRouter.spec.ts</test-file>
      <test-names>
        <name value="AuthRouter" />
        <name value="should create user and return token" />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="AuthRouter.should return 200 and token when user is found" type="mocha-javascript-test-runner" temporary="true" nameIsGenerated="true">
      <node-interpreter>project</node-interpreter>
      <node-options />
      <mocha-package>$PROJECT_DIR$/node_modules/mocha</mocha-package>
      <working-directory>$PROJECT_DIR$</working-directory>
      <pass-parent-env>true</pass-parent-env>
      <ui>bdd</ui>
      <extra-mocha-options>--require ts-node/register</extra-mocha-options>
      <test-kind>TEST</test-kind>
      <test-file>$PROJECT_DIR$/test/entrypoing/AuthRouter.spec.ts</test-file>
      <test-names>
        <name value="AuthRouter" />
        <name value="should return 200 and token when user is found" />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="AuthRouter.should return 404 when user is not found" type="mocha-javascript-test-runner" temporary="true" nameIsGenerated="true">
      <node-interpreter>project</node-interpreter>
      <node-options />
      <mocha-package>$PROJECT_DIR$/node_modules/mocha</mocha-package>
      <working-directory>$PROJECT_DIR$</working-directory>
      <pass-parent-env>true</pass-parent-env>
      <ui>bdd</ui>
      <extra-mocha-options>--require ts-node/register</extra-mocha-options>
      <test-kind>TEST</test-kind>
      <test-file>$PROJECT_DIR$/test/entrypoing/AuthRouter.spec.ts</test-file>
      <test-names>
        <name value="AuthRouter" />
        <name value="should return 404 when user is not found" />
      </test-names>
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Mocha.AuthRepository.should return user id when added to db" />
        <item itemvalue="Mocha.AuthRouter.should return 200 and token when user is found" />
        <item itemvalue="Mocha.AuthRouter.should return 404 when user is not found" />
        <item itemvalue="Mocha.AuthRouter" />
        <item itemvalue="Mocha.AuthRouter.should create user and return token" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="64b27b70-faa8-4f57-8dbe-83ae25a92718" name="Default Changelist" comment="" />
      <created>1614777880885</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1614777880885</updated>
      <workItem from="1614777882064" duration="18641000" />
      <workItem from="1614862366532" duration="594000" />
      <workItem from="1615124082090" duration="824000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
</project>